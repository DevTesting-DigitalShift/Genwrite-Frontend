{"version":3,"file":"Trashcan-BLzzwmsx.js","sources":["../../src/pages/Trashcan.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport axiosInstance from \"@api/index\"\r\nimport SkeletonLoader from \"../components/Projects/SkeletonLoader\"\r\nimport { Tooltip } from \"antd\"\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNotification } from \"@/context/NotificationsContext\";\r\n\r\nconst TRUNCATE_LENGTH = 85\r\n\r\nconst Trashcan = () => {\r\n  const [trashedBlogs, setTrashedBlogs] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const { fetchNotificationsFromBackend } = useNotification();\r\n\r\n  const fetchTrashedBlogs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axiosInstance.get(\"/blogs/\");\r\n      const filteredBlogs = response.data.filter((blog) => blog.isArchived); // Filter isArchived=true\r\n      setTrashedBlogs(filteredBlogs);\r\n    } catch (error) {\r\n      console.error(\"Error fetching trashed blogs:\", error.response?.data?.message || \"Failed to fetch trashed blogs\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTrashedBlogs()\r\n  }, [])\r\n\r\n  const truncateContent = (content, length = TRUNCATE_LENGTH) => {\r\n    if (!content) return \"\"\r\n    return content.length > length ? content.substring(0, length) + \"...\" : content\r\n  }\r\n\r\n  const handleRestore = async (id) => {\r\n    try {\r\n      const response = await axiosInstance.put(`/blogs/restore/${id}`);\r\n      if (response.status === 200) {\r\n        setTrashedBlogs((prev) => prev.filter((blog) => blog._id !== id));\r\n        toast.success(\"Blog restored successfully!\");\r\n        // Fetch notifications from backend after restore\r\n        fetchNotificationsFromBackend && fetchNotificationsFromBackend();\r\n      } else {\r\n        toast.error(\"Failed to restore blog.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"Failed to restore blog.\");\r\n      console.error(\"Error restoring blog:\", (error.response && error.response.data && error.response.data.message) || \"Failed to restore blog\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto\" style={{ overflowY: \"auto\" }}>\r\n      <h1 className=\"text-3xl font-bold mb-6\">Trashcan</h1>\r\n      <p className=\"text-red-600 font-semibold mb-4\">\r\n        Warning: Trashed items will be permanently deleted after 7 days.\r\n      </p>\r\n      {loading ? (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {[...Array(5)].map((_, index) => (\r\n            <div key={index} className=\"bg-white shadow-md rounded-xl p-4\">\r\n              <SkeletonLoader />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : trashedBlogs.length === 0 ? (\r\n        <p>No trashed blogs available.</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {trashedBlogs.map((blog) => {\r\n            const { _id, title, content, focusKeywords, aiModel } = blog\r\n            return (\r\n              <Tooltip key={_id} title={title} color=\"gray\">\r\n                <div className=\"bg-white shadow-md hover:shadow-xl transition-shadow duration-300 rounded-xl p-4\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-800\">{title}</h3>\r\n                    <img\r\n                      src=\"Images/restore.svg\"\r\n                      alt=\"Restore\"\r\n                      className=\"cursor-pointer\"\r\n                      style={{ width: \"20px\", height: \"20px\" }}\r\n                      onClick={() => handleRestore(_id)}\r\n                    />\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600 mb-4\">{truncateContent(content)}</p>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {focusKeywords.map((keyword, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"bg-blue-100 text-blue-800 text-xs font-semibold px-2.5 py-0.5 rounded-full\"\r\n                      >\r\n                        {keyword}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Tooltip>\r\n            )\r\n          })}\r\n        </div>\r\n      )}\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Trashcan"],"names":["TRUNCATE_LENGTH","Trashcan","trashedBlogs","setTrashedBlogs","useState","loading","setLoading","fetchNotificationsFromBackend","useNotification","fetchTrashedBlogs","filteredBlogs","axiosInstance","blog","error","_b","_a","useEffect","truncateContent","content","length","handleRestore","id","prev","toast","jsxs","jsx","_","index","SkeletonLoader","_id","title","focusKeywords","aiModel","Tooltip","keyword","ToastContainer"],"mappings":"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"}