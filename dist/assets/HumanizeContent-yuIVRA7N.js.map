{"version":3,"file":"HumanizeContent-yuIVRA7N.js","sources":["../../src/pages/HumanizeContent.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\"\r\nimport {\r\n  Send,\r\n  Copy,\r\n  Download,\r\n  RefreshCw,\r\n  FileText,\r\n  Sparkles,\r\n  ArrowRight,\r\n  Loader2,\r\n} from \"lucide-react\"\r\nimport { message } from \"antd\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useConfirmPopup } from \"@/context/ConfirmPopupContext\"\r\nimport { generateHumanizedContent, resetHumanizeState } from \"@store/slices/humanizeSlice\"\r\nimport Loading from \"@components/Loading\"\r\n\r\nconst HumanizeContent = () => {\r\n  const [inputContent, setInputContent] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n  const {\r\n    loading: isLoading,\r\n    result: outputContent,\r\n    error,\r\n  } = useSelector((state) => state.humanize)\r\n  const user = useSelector((state) => state.auth.user)\r\n  const userPlan = user?.plan ?? user?.subscription?.plan\r\n  const { handlePopup } = useConfirmPopup()\r\n  const leftPanelRef = useRef()\r\n  const rightPanelRef = useRef()\r\n  const isScrollingSyncRef = useRef(false)\r\n\r\n  // Calculate word count\r\n  const wordCount = inputContent.trim().split(/\\s+/).filter(Boolean).length\r\n\r\n  // Synchronized scrolling function\r\n  const handleScroll = useCallback((source) => {\r\n    if (isScrollingSyncRef.current) return\r\n\r\n    isScrollingSyncRef.current = true\r\n\r\n    const sourcePanel = source === \"left\" ? leftPanelRef.current : rightPanelRef.current\r\n    const targetPanel = source === \"left\" ? rightPanelRef.current : leftPanelRef.current\r\n\r\n    if (sourcePanel && targetPanel) {\r\n      const scrollPercentage =\r\n        sourcePanel.scrollTop / (sourcePanel.scrollHeight - sourcePanel.clientHeight)\r\n      const targetScrollTop =\r\n        scrollPercentage * (targetPanel.scrollHeight - targetPanel.clientHeight)\r\n      targetPanel.scrollTop = targetScrollTop\r\n    }\r\n\r\n    setTimeout(() => {\r\n      isScrollingSyncRef.current = false\r\n    }, 10)\r\n  }, [])\r\n\r\n  const showUpgradePopup = () => {\r\n    handlePopup({\r\n      title: \"Upgrade Required\",\r\n      description: \"This feature is available on higher-tier plans. Please upgrade to continue.\",\r\n      confirmText: \"Upgrade Now\",\r\n      cancelText: \"Cancel\",\r\n      onConfirm: () => {\r\n        // Redirect to upgrade page or handle upgrade logic\r\n        message.info(\"Redirecting to upgrade page...\")\r\n      },\r\n    })\r\n  }\r\n\r\n  const handleMagicWandClick = () => {\r\n    if (userPlan === \"free\" || userPlan === \"basic\") {\r\n      showUpgradePopup()\r\n      return\r\n    }\r\n    handleSubmit()\r\n  }\r\n\r\n  const handleSubmit = async () => {\r\n    if (!inputContent.trim()) {\r\n      message.error(\"Please enter some content to process\")\r\n      return\r\n    }\r\n\r\n    const payload = {\r\n      content: inputContent.trim(),\r\n    }\r\n\r\n    try {\r\n      const resultAction = await dispatch(generateHumanizedContent(payload)).unwrap()\r\n      if (generateHumanizedContent.fulfilled.match(resultAction)) {\r\n        message.success(\"Content processed successfully!\")\r\n      }\r\n    } catch (err) {\r\n      message.error(\"Failed to process content. Please try again.\")\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  const handleCopy = async (content, type) => {\r\n    try {\r\n      await navigator.clipboard.writeText(content)\r\n      message.success(\r\n        `${type === \"original\" ? \"Original\" : \"Processed\"} content copied to clipboard`\r\n      )\r\n    } catch (err) {\r\n      console.error(\"Failed to copy content\")\r\n      message.error(\"Failed to copy content\")\r\n    }\r\n  }\r\n\r\n  const handleDownload = (content, filename) => {\r\n    const blob = new Blob([content], { type: \"text/plain\" })\r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement(\"a\")\r\n    a.href = url\r\n    a.download = filename\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n    URL.revokeObjectURL(url)\r\n    message.success(\"Content downloaded successfully\")\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setInputContent(\"\")\r\n    dispatch(resetHumanizeState())\r\n    message.info(\"Content reset\")\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"h-[calc(100vh-200px)] p-4 flex items-center justify-center\">\r\n        <Loading />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-blue-50/30 to-indigo-50/50\">\r\n      <div className=\"max-w-7xl mx-auto space-y-6 p-5\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-2xl shadow-sm border border-gray-100 p-6\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center\">\r\n                <Sparkles className=\"w-6 h-6 text-white\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold text-gray-900\">Humanize Content</h1>\r\n                <p className=\"text-gray-600\">Transform your content with AI-powered processing</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-3\">\r\n              <button\r\n                onClick={handleReset}\r\n                className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                title=\"Reset all content\"\r\n              >\r\n                <RefreshCw className=\"w-4 h-4\" />\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Input Section */}\r\n        <div className=\"bg-white rounded-2xl shadow-sm border border-gray-100 p-6\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <FileText className=\"w-5 h-5 text-blue-600\" />\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">Input Content</h2>\r\n          </div>\r\n          <div className=\"space-y-4\">\r\n            <textarea\r\n              value={inputContent}\r\n              onChange={(e) => setInputContent(e.target.value)}\r\n              placeholder=\"Paste or type your content here (300â€“500 words)...\"\r\n              className=\"w-full h-60 p-4 border-2 border-gray-200 rounded-xl resize-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500/20 outline-none transition-all duration-300 text-gray-800 placeholder-gray-500\"\r\n            />\r\n            <div className=\"flex justify-between items-center\">\r\n              <p\r\n                className={`text-sm ${\r\n                  wordCount < 300\r\n                    ? \"text-gray-600\"\r\n                    : wordCount > 300\r\n                    ? \"text-red-500\"\r\n                    : \"text-green-600\"\r\n                }`}\r\n              >\r\n                Word count: {wordCount}{\" \"}\r\n                {wordCount < 300\r\n                  ? \"(Minimum 300 words required)\"\r\n                  : wordCount > 300\r\n                  ? \"(Maximum 300 words allowed)\"\r\n                  : \"\"}\r\n              </p>\r\n\r\n              <button\r\n                onClick={handleMagicWandClick}\r\n                disabled={isLoading || !inputContent.trim() || wordCount > 300}\r\n                className={`flex items-center justify-center gap-2 px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl transition-all duration-300 hover:shadow-lg ${\r\n                  !inputContent.trim() || wordCount > 300\r\n                    ? \"opacity-50 cursor-not-allowed\"\r\n                    : \"hover:from-blue-700 hover:to-purple-700 hover:scale-105\"\r\n                }`}\r\n              >\r\n                <Send className=\"w-5 h-5\" />\r\n                Process Content\r\n                <ArrowRight className=\"w-4 h-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Split View Results */}\r\n        {(outputContent || isLoading) && (\r\n          <div className=\"bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden\">\r\n            <div className=\"p-6 border-b border-gray-200\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900 flex items-center gap-3\">\r\n                <Sparkles className=\"w-5 h-5 text-purple-600\" />\r\n                Processing Results\r\n              </h2>\r\n            </div>\r\n            <div className=\"grid lg:grid-cols-2 gap-0 h-96\">\r\n              {/* Original Content Panel */}\r\n              <div className=\"flex flex-col border-r border-gray-200\">\r\n                <div className=\"flex items-center justify-between p-4 bg-gray-50 border-b border-gray-200\">\r\n                  <h3 className=\"font-semibold text-gray-900 flex items-center gap-2\">\r\n                    <FileText className=\"w-4 h-4 text-gray-600\" />\r\n                    Original Content\r\n                  </h3>\r\n                  <button\r\n                    onClick={() => handleCopy(inputContent, \"original\")}\r\n                    className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-200 rounded-lg transition-colors\"\r\n                    title=\"Copy original content\"\r\n                  >\r\n                    <Copy className=\"w-4 h-4\" />\r\n                  </button>\r\n                </div>\r\n                <div\r\n                  ref={leftPanelRef}\r\n                  onScroll={() => handleScroll(\"left\")}\r\n                  className=\"flex-1 p-4 overflow-y-auto bg-gray-50/50 text-gray-800 text-sm leading-relaxed whitespace-pre-wrap\"\r\n                >\r\n                  {inputContent}\r\n                </div>\r\n              </div>\r\n              {/* Processed Content Panel */}\r\n              <div className=\"flex flex-col\">\r\n                <div className=\"flex items-center justify-between p-4 bg-blue-50 border-b border-gray-200\">\r\n                  <h3 className=\"font-semibold text-gray-900 flex items-center gap-2\">\r\n                    <Sparkles className=\"w-4 h-4 text-blue-600\" />\r\n                    Processed Content\r\n                  </h3>\r\n                  <div className=\"flex gap-2\">\r\n                    <button\r\n                      onClick={() => handleCopy(outputContent, \"processed\")}\r\n                      disabled={!outputContent}\r\n                      className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-200 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                      title=\"Copy processed content\"\r\n                    >\r\n                      <Copy className=\"w-4 h-4\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDownload(outputContent, \"processed-content.txt\")}\r\n                      disabled={!outputContent}\r\n                      className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-200 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                      title=\"Download processed content\"\r\n                    >\r\n                      <Download className=\"w-4 h-4\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  ref={rightPanelRef}\r\n                  onScroll={() => handleScroll(\"right\")}\r\n                  className=\"flex-1 p-4 overflow-y-auto bg-white text-gray-800 text-sm leading-relaxed whitespace-pre-wrap\"\r\n                >\r\n                  {isLoading ? (\r\n                    <div className=\"flex items-center justify-center h-full\">\r\n                      <div className=\"text-center\">\r\n                        <Loader2 className=\"w-8 h-8 animate-spin text-blue-600 mx-auto mb-4\" />\r\n                        <p className=\"text-gray-600 font-medium\">Processing your content...</p>\r\n                        <p className=\"text-gray-500 text-sm mt-2\">This may take a few moments</p>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    outputContent\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HumanizeContent\r\n"],"names":["HumanizeContent","inputContent","setInputContent","useState","dispatch","useDispatch","isLoading","outputContent","error","useSelector","state","user","userPlan","_b","_a","handlePopup","useConfirmPopup","leftPanelRef","useRef","rightPanelRef","isScrollingSyncRef","wordCount","handleScroll","useCallback","source","sourcePanel","targetPanel","targetScrollTop","showUpgradePopup","message","handleMagicWandClick","handleSubmit","__async","payload","resultAction","generateHumanizedContent","err","handleCopy","content","type","handleDownload","filename","blob","url","a","handleReset","resetHumanizeState","jsx","Loading","jsxs","Sparkles","RefreshCw","FileText","e","Send","ArrowRight","Copy","Download","Loader2"],"mappings":"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"}